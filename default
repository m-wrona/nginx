server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	server_name localhost;

	return  301 https://$server_name$request_uri;
}


# HTTPS server
server {
	listen 443;
	server_name localhost;

	ssl on;
	ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key; 

	#ssl_session_tickets on;
	ssl_session_cache shared:SSL:20m;
	ssl_session_timeout 4h;

	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
	ssl_prefer_server_ciphers on;

	# Hide server details
    server_tokens off;
	more_clear_headers 'Server';
	more_clear_headers 'X-Powered-By';
	
	# Prevent displaying in i-frames
	add_header X-Frame-Options DENY;

	location / {
        root /usr/share/nginx/html/app;
        index index.html index.htm;
        #auth_basic "Restricted";
        #auth_basic_user_file /etc/nginx/.htpasswd;
	}

	# redirect back-end requests to separate location
	location /be {
		rewrite /be/(.*) /$1  break;
		proxy_pass       http://localhost:8000;
		proxy_redirect     off;
		proxy_set_header Host      $host;
		proxy_set_header X-Real-IP $remote_addr;
	}

	# Handle errors
	error_page 400 401 402 403 404 405 406 407 408  /50x.html;
	error_page 500 502 503 504 505 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
		internal;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
}
